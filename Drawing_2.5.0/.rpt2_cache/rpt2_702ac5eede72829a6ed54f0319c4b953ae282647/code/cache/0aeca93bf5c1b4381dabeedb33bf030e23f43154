{
  "code": "import { Admin, Animation2D, Click, EventAdmin, Tools, _PreLoad } from \"./Lwg\";\r\nexport var _Game;\r\n(function (_Game) {\r\n    let _Event;\r\n    (function (_Event) {\r\n        _Event[\"start\"] = \"_Game_start\";\r\n        _Event[\"showStepBtn\"] = \"_Game_showStepBtn\";\r\n        _Event[\"lastStep\"] = \"_Game_lastStep\";\r\n        _Event[\"nextStep\"] = \"_Game_nextStep\";\r\n        _Event[\"compelet\"] = \"_Game_compelet\";\r\n        _Event[\"playAni1\"] = \"_Game_playAni1\";\r\n        _Event[\"playAni2\"] = \"_Game_playAni2\";\r\n    })(_Event = _Game._Event || (_Game._Event = {}));\r\n    let _Animation;\r\n    (function (_Animation) {\r\n        _Animation[\"action1\"] = \"action1\";\r\n        _Animation[\"action2\"] = \"action2\";\r\n    })(_Animation = _Game._Animation || (_Game._Animation = {}));\r\n    _Game._stepOrder = [];\r\n    _Game._passLenghtArr = [];\r\n    _Game._stepIndex = 0;\r\n    _Game._stepMaskIndex = 0;\r\n    _Game._drawSwitch = false;\r\n    _Game._coloursPencils = {};\r\n    _Game._singlePencils = {\r\n        property: {\r\n            number: 'number',\r\n            name: 'name',\r\n            color: 'color',\r\n            pitch: 'pitch',\r\n        },\r\n        pitchName: {\r\n            get value() {\r\n                return this['name'] ? this['name'] : _Game._singlePencils.data[0][_Game._singlePencils.property.name];\r\n            },\r\n            set value(name) {\r\n                this['name'] = name;\r\n            }\r\n        },\r\n        pitchColor: {\r\n            get value() {\r\n                return this['color'] ? this['color'] : _Game._singlePencils.data[0][_Game._singlePencils.property.color];\r\n            },\r\n            set value(name) {\r\n                this['color'] = name;\r\n            }\r\n        },\r\n        get data() {\r\n            return this['arr'] ? this['arr'] : Tools.objArray_Copy(Laya.loader.getRes(_PreLoad.list_JsonData[0]));\r\n        },\r\n        set data(array) {\r\n            this['arr'] = array;\r\n        },\r\n        setPitchByName(name) {\r\n            for (let index = 0; index < this.data.length; index++) {\r\n                if (name == this.data[index][this.property.name]) {\r\n                    this.data[index][this.property.pitch] = true;\r\n                    _Game._singlePencils.pitchName.value = name;\r\n                    _Game._singlePencils.pitchColor.value = this.data[index][this.property.color];\r\n                }\r\n                else {\r\n                    this.data[index][this.property.pitch] = false;\r\n                }\r\n            }\r\n        }\r\n    };\r\n    function _init() {\r\n        _Game._singlePencils.data = Tools.objArray_Copy(Laya.loader.getRes(_PreLoad.list_JsonData[0])[\"RECORDS\"]);\r\n        _Game._singlePencils.setPitchByName(_Game._singlePencils.data[0][_Game._singlePencils.property.name]);\r\n        _Game._stepOrder = ['Face', 'Petal1', 'Petal2', 'Petal3', 'Petal4', 'Stalk', 'Leaf1', 'Leaf2'];\r\n        _Game._passLenghtArr = [150, 150, 150, 150, 150, 150, 150, 150];\r\n    }\r\n    _Game._init = _init;\r\n    class _GameGeneral extends Admin._Scene {\r\n        moduleOnAwake() {\r\n            _Game._stepIndex = 0;\r\n            _Game._PencilsList = this.ListVar('PencilsList');\r\n            _Game._PencilsList.array = _Game._singlePencils.data;\r\n            _Game._PencilsList.selectEnable = true;\r\n            _Game._PencilsList.vScrollBarSkin = \"\";\r\n            _Game._PencilsList.selectHandler = new Laya.Handler(this, this._pencilsListScelet);\r\n            _Game._PencilsList.renderHandler = new Laya.Handler(this, this._pencilsListUpdate);\r\n            if (_Game._PencilsList.cells.length !== 0) {\r\n                for (let index = 0; index < _Game._PencilsList.cells.length; index++) {\r\n                    const element = _Game._PencilsList.cells[index];\r\n                    if (!element.getComponent(_PencilsListItem)) {\r\n                        element.addComponent(_PencilsListItem);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        _pencilsListScelet(index) { }\r\n        _pencilsListUpdate(cell, index) {\r\n            let _dataSource = cell.dataSource;\r\n            let Pic = cell.getChildByName('Pic');\r\n            Pic.skin = 'Game/UI/GameScene/SinglePencils/' + _dataSource['name'] + '.png';\r\n            if (_dataSource[_Game._singlePencils.property.pitch]) {\r\n                Pic.scale(1.1, 1.1);\r\n            }\r\n            else {\r\n                Pic.scale(1, 1);\r\n            }\r\n        }\r\n    }\r\n    _Game._GameGeneral = _GameGeneral;\r\n    class _PencilsListItem extends Admin._Object {\r\n        lwgBtnClick() {\r\n            Click._on(Click._Type.largen, this.self, this, null, null, () => {\r\n                _Game._singlePencils.setPitchByName(this.self['_dataSource'][_Game._singlePencils.property.name]);\r\n                _Game._PencilsList.refresh();\r\n                console.log(_Game._singlePencils.pitchColor.value);\r\n            });\r\n        }\r\n    }\r\n    _Game._PencilsListItem = _PencilsListItem;\r\n})(_Game || (_Game = {}));\r\nexport default class GameScene extends _Game._GameGeneral {\r\n    constructor() {\r\n        super(...arguments);\r\n        this._drawingLenth = {\r\n            switch: true,\r\n            get value() {\r\n                return this['len'] ? this['len'] : 0;\r\n            },\r\n            set value(v) {\r\n                if (this.switch) {\r\n                    this['len'] = v;\r\n                    if (this['len'] >= _Game._passLenghtArr[_Game._stepIndex]) {\r\n                        EventAdmin._notify(_Game._Event.showStepBtn);\r\n                        this['len'] = 0;\r\n                    }\r\n                }\r\n            },\r\n        };\r\n    }\r\n    lwgOnAwake() {\r\n        _Game._stepIndex = 0;\r\n        _Game._drawSwitch = false;\r\n    }\r\n    lwgOnEnable() {\r\n    }\r\n    lwgEventRegister() {\r\n        EventAdmin._register(_Game._Event.start, this, () => {\r\n            _Game._drawSwitch = true;\r\n            for (let index = 0; index < _Game._stepOrder.length; index++) {\r\n                if (_Game._stepIndex >= index) {\r\n                    this.ImgVar(_Game._stepOrder[index]).visible = true;\r\n                }\r\n                else {\r\n                    this.ImgVar(_Game._stepOrder[index]).visible = false;\r\n                }\r\n            }\r\n        });\r\n        EventAdmin._register(_Game._Event.showStepBtn, this, () => {\r\n            if (_Game._stepIndex == 0) {\r\n                this.ImgVar('BtnNextStep').visible = true;\r\n                Animation2D.fadeOut(this.ImgVar('BtnNextStep'), 0, 1, 300, null, null, true);\r\n            }\r\n            else {\r\n                if (!this.ImgVar('BtnNextStep').visible) {\r\n                    this.ImgVar('BtnNextStep').visible = true;\r\n                    Animation2D.fadeOut(this.ImgVar('BtnNextStep'), 0, 1, 300, null, null, true);\r\n                }\r\n                if (!this.ImgVar('BtnLastStep').visible) {\r\n                    this.ImgVar('BtnLastStep').visible = true;\r\n                    Animation2D.fadeOut(this.ImgVar('BtnLastStep'), 0, 1, 300, null, null, true);\r\n                }\r\n            }\r\n            this._drawingLenth.switch = false;\r\n        });\r\n        EventAdmin._register(_Game._Event.lastStep, this, () => {\r\n            if (_Game._stepIndex - 1 >= 0) {\r\n                Admin._clickLock.switch = true;\r\n                let Img0 = this.ImgVar(_Game._stepOrder[_Game._stepIndex - 1]);\r\n                let parent0 = Img0.parent;\r\n                Animation2D.fadeOut(Img0.getChildByName('Pic'), 0, 1, 300, 0, () => {\r\n                    if (parent0 != this.ImgVar('DrawRoot')) {\r\n                        parent0.zOrder = (_Game._stepIndex + 1) * 10;\r\n                    }\r\n                    Img0.zOrder = (_Game._stepIndex + 1) * 10;\r\n                    let Img = this.ImgVar(_Game._stepOrder[_Game._stepIndex]);\r\n                    let parent = Img.parent;\r\n                    Animation2D.fadeOut(Img.getChildByName('Pic'), 1, 0, 300, 0, () => {\r\n                        if (parent != this.ImgVar('DrawRoot')) {\r\n                            parent.zOrder = -1;\r\n                        }\r\n                        Img.zOrder = -1;\r\n                        _Game._stepIndex--;\r\n                        console.log(_Game._stepIndex, _Game._stepMaskIndex);\r\n                        if (_Game._stepIndex < _Game._stepMaskIndex) {\r\n                            this.ImgVar('BtnNextStep').visible = true;\r\n                        }\r\n                        if (_Game._stepIndex == 0) {\r\n                            this.ImgVar('BtnLastStep').visible = false;\r\n                        }\r\n                        Admin._clickLock.switch = false;\r\n                    });\r\n                });\r\n            }\r\n        });\r\n        EventAdmin._register(_Game._Event.nextStep, this, () => {\r\n            if (_Game._stepIndex >= _Game._stepOrder.length - 1) {\r\n                EventAdmin._notify(_Game._Event.compelet);\r\n                Animation2D.fadeOut(this.ImgVar(_Game._stepOrder[_Game._stepIndex]).getChildByName('Pic'), 1, 0, 300, 0);\r\n            }\r\n            else {\r\n                Admin._clickLock.switch = true;\r\n                let Img = this.ImgVar(_Game._stepOrder[_Game._stepIndex]);\r\n                let parent = Img.parent;\r\n                if (parent != this.ImgVar('DrawRoot')) {\r\n                    parent.zOrder = -1;\r\n                }\r\n                Img.zOrder = -1;\r\n                Animation2D.fadeOut(Img.getChildByName('Pic'), 1, 0, 300, 0, () => {\r\n                    let Img0 = this.ImgVar(_Game._stepOrder[_Game._stepIndex + 1]);\r\n                    Img0.visible = true;\r\n                    Animation2D.fadeOut(Img0.getChildByName('Pic'), 0, 1, 300, 0, () => {\r\n                        let parent0 = Img0.parent;\r\n                        _Game._stepIndex++;\r\n                        if (_Game._stepIndex == _Game._stepMaskIndex + 1) {\r\n                            _Game._stepMaskIndex++;\r\n                            this.ImgVar('BtnNextStep').visible = false;\r\n                            this._drawingLenth.switch = true;\r\n                        }\r\n                        if (parent0 != this.ImgVar('DrawRoot')) {\r\n                            parent0.zOrder = _Game._stepIndex * 10;\r\n                        }\r\n                        console.log(_Game._stepIndex, _Game._stepMaskIndex);\r\n                        Img0.zOrder = _Game._stepIndex * 10;\r\n                        Admin._clickLock.switch = false;\r\n                    });\r\n                });\r\n            }\r\n        });\r\n        EventAdmin._register(_Game._Event.compelet, this, () => {\r\n            _Game._drawSwitch = false;\r\n            this.ImgVar('BtnNextStep').visible = false;\r\n            this.ImgVar('BtnLastStep').visible = false;\r\n            this.ImgVar('PlayAni').visible = true;\r\n            this.ImgVar('PlayAni').zOrder = 10;\r\n            this.ImgVar('BtnBack').visible = true;\r\n        });\r\n    }\r\n    lwgOnStart() {\r\n        EventAdmin._notify(_Game._Event.start);\r\n    }\r\n    lwgBtnClick() {\r\n        Click._on(Click._Type.largen, this.btnVar('BtnBack'), this, null, null, () => {\r\n            Admin._openScene(Admin._SceneName.UIStart, this.calssName);\r\n        });\r\n        for (let index = 0; index < _Game._stepOrder.length; index++) {\r\n            let Img = this.ImgVar(_Game._stepOrder[index]);\r\n            Click._on(Click._Type.noEffect, Img.getChildByName('Pic'), this, (e) => {\r\n                this['frontPos'] = null;\r\n                if (!Img.getChildByName('DrawSp')) {\r\n                    let DrawSp = new Laya.Sprite();\r\n                    Img.addChild(DrawSp);\r\n                    DrawSp.name = 'DrawSp';\r\n                    DrawSp.pos(0, 0);\r\n                }\r\n                this['frontPos'] = Img.globalToLocal(new Laya.Point(e.stageX, e.stageY));\r\n            }, (e) => {\r\n                let DrawSp = Img.getChildByName('DrawSp');\r\n                if (!DrawSp) {\r\n                    return;\r\n                }\r\n                if (this['frontPos'] && index == _Game._stepIndex && _Game._drawSwitch) {\r\n                    let endPos = Img.globalToLocal(new Laya.Point(e.stageX, e.stageY));\r\n                    DrawSp.graphics.drawLine(this['frontPos'].x, this['frontPos'].y, endPos.x, endPos.y, _Game._singlePencils.pitchColor.value, 30);\r\n                    DrawSp.graphics.drawCircle(endPos.x, endPos.y, 15, _Game._singlePencils.pitchColor.value);\r\n                    this._drawingLenth.value += this['frontPos'].distance(endPos.x, endPos.y);\r\n                    this['frontPos'] = new Laya.Point(endPos.x, endPos.y);\r\n                }\r\n            }, (e) => {\r\n                this['frontPos'] = null;\r\n            });\r\n        }\r\n        Click._on(Click._Type.largen, this.btnVar('PlayAni'), this, null, null, () => {\r\n            this.AniVar(_Game._Animation.action1).play(null, true);\r\n        });\r\n        Click._on(Click._Type.largen, this.btnVar('BtnLastStep'), this, null, null, () => {\r\n            this._drawingLenth.switch = false;\r\n            EventAdmin._notify(_Game._Event.lastStep);\r\n        });\r\n        Click._on(Click._Type.largen, this.btnVar('BtnNextStep'), this, null, null, () => {\r\n            if (!this.ImgVar('BtnLastStep').visible) {\r\n                this.ImgVar('BtnLastStep').visible = true;\r\n                Animation2D.fadeOut(this.ImgVar('BtnLastStep'), 0, 1, 300, null, null, true);\r\n            }\r\n            EventAdmin._notify(_Game._Event.nextStep);\r\n        });\r\n    }\r\n}\r\n",
  "references": [
    "D:/Game/project/Drawing/Project_2.5.0/Drawing_2.5.0/src/script/Frame/Lwg.ts"
  ]
}
