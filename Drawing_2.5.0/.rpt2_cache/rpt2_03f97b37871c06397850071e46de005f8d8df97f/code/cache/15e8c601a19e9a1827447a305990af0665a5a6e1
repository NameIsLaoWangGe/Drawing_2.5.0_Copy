{
  "code": "import ADManager, { TaT } from \"../TJ/Admanager\";\r\nimport { Admin, Animation2D, Click, TimerAdmin, Tools, _SceneName } from \"./Lwg\";\r\nimport { _Game } from \"./_Game\";\r\nimport { _PropTry } from \"./_PropTry\";\r\nexport default class _PencilsListItem extends Admin._Object {\r\n    lwgOnStart() {\r\n        Animation2D.bombs_Appear(this.Owner, 0, 1, 1.3, Tools.randomOneHalf() == 1 ? 10 : -10, 300, 150, Math.round(Math.random() * 500) + 800, () => {\r\n            var caller = {};\r\n            TimerAdmin._frameLoop(1, caller, () => {\r\n                if (this.Owner['_dataSource']) {\r\n                    Laya.timer.clearAll(caller);\r\n                    if ((_Game._GeneralPencils._pitchName == this.Owner['_dataSource'][_Game._GeneralPencils._property.name])) {\r\n                        Animation2D.rotate_Scale(this.Owner, 0, 1, 1, 180, 1.2, 1.2, 250, 0, () => {\r\n                            Animation2D.rotate_Scale(this.Owner, 0, 1, 1, 360, 1, 1, 250, 0, () => {\r\n                                this.Owner.rotation = 0;\r\n                            });\r\n                        });\r\n                    }\r\n                }\r\n            });\r\n        });\r\n    }\r\n    lwgBtnClick() {\r\n        var func = (e) => {\r\n            e.stopPropagation();\r\n        };\r\n        Click._on(Click._Type.largen, this.Owner, this, func, func, (e) => {\r\n            console.log(this.Owner);\r\n            e.stopPropagation();\r\n            ADManager.TAPoint(TaT.BtnClick, `id_${this.Owner['_dataSource']['name']}`);\r\n            let lasName = _Game._GeneralPencils._pitchName;\r\n            _Game._GeneralPencils._setPitchByName(this.Owner['_dataSource'][_Game._GeneralPencils._property.name]);\r\n            if (this.Owner['_dataSource'][_Game._GeneralPencils._property.name] == 'colours') {\r\n                console.log(this.Owner['_dataSource']['name']);\r\n                if (!_Game._ColoursPencils._Switch) {\r\n                    _Game._GeneralPencils._setPitchByName(lasName);\r\n                    _PropTry._comeFrom = _SceneName.Game;\r\n                    this.lwgOpenScene(_SceneName.PropTry, false);\r\n                    _Game._activate = false;\r\n                    return;\r\n                }\r\n                for (let index = 0; index < _Game._ColoursPencils._data.length; index++) {\r\n                    const element = _Game._ColoursPencils._data[index];\r\n                    if (_Game._ColoursPencils._pitchName == element[_Game._GeneralPencils._property.name]) {\r\n                        let nameIndex = Number(_Game._ColoursPencils._pitchName.substr(5));\r\n                        if (_Game._Pencils.presentUse == _Game._Pencils.type.colours) {\r\n                            if (!nameIndex) {\r\n                                nameIndex = 1;\r\n                            }\r\n                            nameIndex++;\r\n                            if (nameIndex > 7) {\r\n                                nameIndex = 1;\r\n                            }\r\n                            _Game._ColoursPencils._pitchName = `caise${nameIndex}`;\r\n                            _Game._ColoursPencils._setPresentColorArr();\r\n                        }\r\n                        _Game._GeneralList.refresh();\r\n                        return;\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                _Game._Pencils.presentUse = _Game._Pencils.type.general;\r\n            }\r\n        }, func);\r\n    }\r\n}\r\n",
  "references": [
    "D:/Game/project/Drawing/Project_2.5.0/Drawing_2.5.0/src/script/TJ/Admanager.ts",
    "D:/Game/project/Drawing/Project_2.5.0/Drawing_2.5.0/src/script/Frame/Lwg.ts",
    "D:/Game/project/Drawing/Project_2.5.0/Drawing_2.5.0/src/script/Frame/_Game.ts",
    "D:/Game/project/Drawing/Project_2.5.0/Drawing_2.5.0/src/script/Frame/_PropTry.ts"
  ]
}
