{
  "code": "import TweenMgr from \"./TweenMgr\";\r\nexport default class Tweener {\r\n    constructor() {\r\n        this.id = Tweener.internalId;\r\n        this.inParams = [];\r\n        this.outParams = [];\r\n    }\r\n    static get internalId() {\r\n        return ++(Tweener._internalId);\r\n    }\r\n    set factor(v) {\r\n        this._factor = v;\r\n        this.update.runWith(this);\r\n    }\r\n    get factor() {\r\n        return this._factor;\r\n    }\r\n    beforeRun() {\r\n        this.pause = false;\r\n        for (let v of this.inParams) {\r\n            v.length = 0;\r\n        }\r\n        for (let v of this.outParams) {\r\n            v.length = 0;\r\n        }\r\n        this.delayCounter = 0;\r\n    }\r\n    play() {\r\n        this.beforeRun();\r\n        this.counter = 0;\r\n        this.factor = 0;\r\n        this.dir = true;\r\n    }\r\n    reverse(fromNow = false) {\r\n        if (this.loopDir == 0) {\r\n            this.beforeRun();\r\n            if (fromNow) {\r\n                this.counter = this.duration * this.factor;\r\n            }\r\n            else {\r\n                this.counter = this.duration;\r\n                this.factor = 1;\r\n            }\r\n            this.dir = false;\r\n        }\r\n    }\r\n    discard() {\r\n        this.hasClear = true;\r\n        if (this.complete) {\r\n            this.complete.recover();\r\n            this.complete = null;\r\n        }\r\n        if (this.update) {\r\n            this.update.recover();\r\n            this.update = null;\r\n        }\r\n    }\r\n    stop() {\r\n        this.pause = true;\r\n    }\r\n    _conf(duration, update, complete, loopDir, auto, ignoreTime, ease, delay) {\r\n        this.duration = duration;\r\n        this.update = update;\r\n        this.complete = complete;\r\n        this.loopDir = loopDir;\r\n        this.autoClear = auto;\r\n        this.ignoreTime = ignoreTime;\r\n        this.ease = ease;\r\n        this.delay = delay;\r\n        this.hasClear = false;\r\n        this.pause = true;\r\n    }\r\n    _step(dt) {\r\n        if (this.pause || this.hasClear) {\r\n            return;\r\n        }\r\n        if (this.delayCounter < this.delay) {\r\n            this.delayCounter += dt;\r\n            return;\r\n        }\r\n        if (this.dir) {\r\n            this.counter += dt;\r\n            let ratio = TweenMgr.clamp(this.counter / this.duration, 0, 1);\r\n            if (ratio == 1) {\r\n                this.factor = 1;\r\n            }\r\n            else {\r\n                this.factor = this.ease(this.counter, 0, 1, this.duration);\r\n            }\r\n            if (this.factor == 1) {\r\n                if (this.loopDir == 0) {\r\n                    this.pause = true;\r\n                    this.complete && this.complete.run();\r\n                    this.autoClear && this.discard();\r\n                }\r\n                else if (this.loopDir == 1) {\r\n                    this.dir = true;\r\n                    this.counter = 0;\r\n                    this.delayCounter = 0;\r\n                }\r\n                else if (this.loopDir == 2) {\r\n                    this.dir = false;\r\n                    this.counter = this.duration;\r\n                    this.delayCounter = 0;\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            this.counter -= dt;\r\n            let ratio = TweenMgr.clamp(this.counter / this.duration, 0, 1);\r\n            if (ratio == 0) {\r\n                this.factor = 0;\r\n            }\r\n            else {\r\n                this.factor = this.ease(this.counter, 0, 1, this.duration);\r\n            }\r\n            if (this.factor == 0) {\r\n                if (this.loopDir == 0) {\r\n                    this.pause = true;\r\n                    this.complete && this.complete.run();\r\n                    this.autoClear && this.discard();\r\n                }\r\n                else if (this.loopDir == 1) {\r\n                    console.error(\"unvalid tween\");\r\n                }\r\n                else if (this.loopDir == 2) {\r\n                    this.dir = true;\r\n                    this.counter = 0;\r\n                    this.delayCounter = 0;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    getPG(groupName, group) {\r\n        let params = this[groupName];\r\n        let rs = params[group];\r\n        if (!rs) {\r\n            rs = [];\r\n            params[group] = rs;\r\n        }\r\n        return rs;\r\n    }\r\n}\r\nTweener._internalId = 0;\r\n",
  "references": [
    "C:/Users/sjie1/Desktop/Drawing_2.5.0/src/script/Frame/TweenMgr.ts"
  ]
}
