{
  "code": "import ADManager, { TaT } from \"../TJ/Admanager\";\r\nimport { Admin, Animation2D, Click, EventAdmin, TimerAdmin, Tools, _SceneName } from \"./Lwg\";\r\nimport { _Compound } from \"./_Compound\";\r\nimport { _Game } from \"./_Game\";\r\nimport { _PropTry } from \"./_PropTry\";\r\nexport class _GameItem extends Admin._Object {\r\n    constructor() {\r\n        super(...arguments);\r\n        this.Compound = {\r\n            Pencil: null,\r\n            time: 0,\r\n            restrict: 1,\r\n            DisImg: null,\r\n            firstPos: null,\r\n            PosArr: null,\r\n            homing: () => {\r\n                if (this.Compound.DisImg) {\r\n                    this.Compound.DisImg.destroy();\r\n                    this.Compound.DisImg = null;\r\n                    this.Compound.Pencil.visible = true;\r\n                }\r\n            },\r\n            remake: () => {\r\n                this.Compound.homing();\r\n                this.Compound.time = 0;\r\n                _Game._GeneralPencils._compoundName = null;\r\n                EventAdmin._notify(_Game._Event.generalRefresh);\r\n            },\r\n            disImgState: (e) => {\r\n                this.Compound.DisImg.visible = true;\r\n                this.Compound.Pencil.visible = false;\r\n                this.Compound.DisImg.pos(e.stageX, e.stageY);\r\n                let gOwnerP = this._Parent.localToGlobal(new Laya.Point(this.Owner.x, this.Owner.y));\r\n                let distance = gOwnerP.distance(this.Compound.DisImg.x, this.Compound.DisImg.y);\r\n                if (distance > 100) {\r\n                    this.Compound.DisImg.rotation = -45;\r\n                    Tools.Node.changePovit(this.Compound.DisImg, this.Compound.DisImg.width / 2, 0);\r\n                }\r\n                else {\r\n                    this.Compound.DisImg.rotation = 0;\r\n                    Tools.Node.changePovit(this.Compound.DisImg, this.Compound.DisImg.width / 2, this.Compound.DisImg.height / 2);\r\n                }\r\n            }\r\n        };\r\n    }\r\n    lwgOnAwake() {\r\n        this.Compound.Pencil = this.Owner.getChildByName('Pic');\r\n    }\r\n    lwgOnStart() {\r\n        var caller = {};\r\n        TimerAdmin._frameLoop(1, caller, () => {\r\n            if (this.Owner['_dataSource']) {\r\n                Laya.timer.clearAll(caller);\r\n                Animation2D.bombs_Appear(this.Owner, 0, 1, 1.3, Tools.randomOneHalf() == 1 ? 10 : -10, 300, 150, Math.round(Math.random() * 500) + 800, () => {\r\n                    if (!this.Owner.getComponents(_GameItem)) {\r\n                        !this.Owner.addComponent(_GameItem);\r\n                    }\r\n                    if ((_Game._GeneralPencils._pitchName == this.Owner['_dataSource'][_Game._GeneralPencils._property.name])) {\r\n                        Animation2D.rotate_Scale(this.Owner, 0, 1, 1, 180, 1.2, 1.2, 250, 0, () => {\r\n                            Animation2D.rotate_Scale(this.Owner, 0, 1, 1, 360, 1, 1, 250, 0, () => {\r\n                                this.Owner.rotation = 0;\r\n                            });\r\n                        });\r\n                    }\r\n                });\r\n            }\r\n        });\r\n    }\r\n    onStageMouseMove(e) {\r\n        if (this.Owner['_dataSource'] && this.Compound.time > this.Compound.restrict && this.Compound.DisImg) {\r\n            this.Compound.disImgState(e);\r\n            _Game._GeneralPencils._compoundName = this.Owner['_dataSource']['name'];\r\n            _Game._GeneralPencils._pitchName = this.Owner['_dataSource']['name'];\r\n        }\r\n    }\r\n    onStageMouseUp(e) {\r\n        if (this.Owner['_dataSource']) {\r\n            this.Compound.remake();\r\n        }\r\n    }\r\n    lwgBtnClick() {\r\n        Click._on(Click._Type.noEffect, this.Compound.Pencil, this, (e) => {\r\n            console.log(\"点击！\");\r\n            if (!this.Compound.DisImg && this.Owner['_dataSource']) {\r\n                this.Compound.firstPos = new Laya.Point(e.stageX, e.stageY);\r\n                this.Compound.DisImg = new Laya.Image;\r\n                this.OwnerScene.addChild(this.Compound.DisImg);\r\n                this.Compound.DisImg.zOrder = 300;\r\n                this.Compound.DisImg.width = this.Compound.Pencil.width;\r\n                this.Compound.DisImg.height = this.Compound.Pencil.height;\r\n                this.Compound.DisImg.scale(this.Compound.Pencil.scaleX, this.Compound.Pencil.scaleY);\r\n                Tools.Node.changePovit(this.Compound.DisImg, this.Compound.DisImg.width / 2, this.Compound.DisImg.height / 2);\r\n                this.Compound.DisImg.skin = this.Compound.Pencil.skin;\r\n                this.Compound.DisImg.visible = false;\r\n            }\r\n        }, (e) => {\r\n            this.Compound.time++;\r\n        }, (e) => {\r\n            if (_Game._GeneralPencils._compoundName && _Game._GeneralPencils._compoundName !== this.Owner['_dataSource']['name']) {\r\n                _Compound.Skin1 = _Game._GeneralPencils._compoundName;\r\n                _Compound.Skin2 = this.Owner['_dataSource']['name'];\r\n                this.lwgOpenScene(_SceneName.Compound, false);\r\n                this.Compound.remake();\r\n                return;\r\n            }\r\n            ADManager.TAPoint(TaT.BtnClick, `id_${this.Owner['_dataSource']['name']}`);\r\n            let lastName = _Game._GeneralPencils._pitchName;\r\n            _Game._GeneralPencils._pitchName = this.Owner['_dataSource']['name'];\r\n            if (this.Owner['_dataSource']['name'] == 'colours') {\r\n                if (!_Game._ColoursPencils._switch) {\r\n                    _Game._GeneralPencils._pitchName = lastName;\r\n                    _PropTry._comeFrom = _SceneName.Game;\r\n                    this.lwgOpenScene(_SceneName.PropTry, false);\r\n                    return;\r\n                }\r\n                _Game._ColoursPencils._clickNum++;\r\n                if (_Game._ColoursPencils._clickNum == 1) {\r\n                    EventAdmin._notify(_Game._Event.generalRefresh);\r\n                    return;\r\n                }\r\n                for (let index = 0; index < _Game._ColoursPencils._data.length; index++) {\r\n                    const element = _Game._ColoursPencils._data[index];\r\n                    if (_Game._ColoursPencils._pitchName == element[_Game._GeneralPencils._property.name]) {\r\n                        let nameIndex = Number(_Game._ColoursPencils._pitchName.substr(5));\r\n                        if (_Game._ColoursPencils._switch) {\r\n                            if (!nameIndex) {\r\n                                nameIndex = 1;\r\n                            }\r\n                            nameIndex++;\r\n                            if (nameIndex > 7) {\r\n                                nameIndex = 1;\r\n                            }\r\n                            _Game._ColoursPencils._pitchName = `caise${nameIndex}`;\r\n                            _Game._ColoursPencils._setPresentColorArr();\r\n                        }\r\n                        EventAdmin._notify(_Game._Event.generalRefresh);\r\n                        return;\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                _Game._ColoursPencils._clickNum = 0;\r\n            }\r\n        }, (e) => {\r\n            e.stopPropagation();\r\n        });\r\n    }\r\n}\r\n",
  "references": [
    "D:/Game/project/Drawing/Project_2.5.0/Drawing_2.5.0/src/script/TJ/Admanager.ts",
    "D:/Game/project/Drawing/Project_2.5.0/Drawing_2.5.0/src/script/Frame/Lwg.ts",
    "D:/Game/project/Drawing/Project_2.5.0/Drawing_2.5.0/src/script/Frame/_Compound.ts",
    "D:/Game/project/Drawing/Project_2.5.0/Drawing_2.5.0/src/script/Frame/_Game.ts",
    "D:/Game/project/Drawing/Project_2.5.0/Drawing_2.5.0/src/script/Frame/_PropTry.ts"
  ]
}
