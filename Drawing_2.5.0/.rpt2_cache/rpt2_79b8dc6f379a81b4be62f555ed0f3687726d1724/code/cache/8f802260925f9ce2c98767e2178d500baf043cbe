{
  "code": "import { Admin, Animation2D, Click, EventAdmin, Tools } from \"./Lwg\";\r\nimport { _PreloadUrl } from \"./_PreLoad\";\r\nexport var _Game;\r\n(function (_Game) {\r\n    let _Event;\r\n    (function (_Event) {\r\n        _Event[\"start\"] = \"_Game_start\";\r\n        _Event[\"showStepBtn\"] = \"_Game_showStepBtn\";\r\n        _Event[\"lastStep\"] = \"_Game_lastStep\";\r\n        _Event[\"nextStep\"] = \"_Game_nextStep\";\r\n        _Event[\"compelet\"] = \"_Game_compelet\";\r\n        _Event[\"playAni1\"] = \"_Game_playAni1\";\r\n        _Event[\"playAni2\"] = \"_Game_playAni2\";\r\n    })(_Event = _Game._Event || (_Game._Event = {}));\r\n    let _Animation;\r\n    (function (_Animation) {\r\n        _Animation[\"action1\"] = \"action1\";\r\n        _Animation[\"action2\"] = \"action2\";\r\n    })(_Animation = _Game._Animation || (_Game._Animation = {}));\r\n    let _Brush;\r\n    (function (_Brush) {\r\n        _Brush[\"chalk\"] = \"chalk\";\r\n        _Brush[\"pencil\"] = \"pencil\";\r\n    })(_Brush = _Game._Brush || (_Game._Brush = {}));\r\n    _Game._stepOrder = [];\r\n    _Game._passLenghtArr = [];\r\n    _Game._stepIndex = 0;\r\n    _Game._stepMaskIndex = 0;\r\n    _Game._drawSwitch = false;\r\n    _Game._Pencils = {\r\n        type: {\r\n            SingleColor: 'SingleColor',\r\n            Colours: 'Colours',\r\n            Stars: 'Stars',\r\n        },\r\n        allPencils: ['Colours', 'SingleColor', 'Stars'],\r\n        get have() {\r\n            try {\r\n                let data = Laya.LocalStorage.getJSON('_Pencils_have');\r\n                if (data) {\r\n                    return JSON.parse(data);\r\n                    ;\r\n                }\r\n                else {\r\n                    return ['SingleColor'];\r\n                }\r\n            }\r\n            catch (error) {\r\n                return ['SingleColor'];\r\n            }\r\n        },\r\n        set have(array) {\r\n            Laya.LocalStorage.setJSON('_Pencils_have', JSON.stringify(array));\r\n        },\r\n        get nohave() {\r\n            return Tools.array1ExcludeArray2(_Game._Pencils.allPencils, _Game._Pencils.have);\r\n        },\r\n        add(str) {\r\n            let arr = Tools.array_Copy(_Game._Pencils.have);\r\n            arr.push(str);\r\n            Laya.LocalStorage.setJSON('_Pencils_have', JSON.stringify(arr));\r\n        }\r\n    };\r\n    class _SingleColorPencils {\r\n        static _init() {\r\n            this._data = Tools.objArray_Copy(Laya.loader.getRes(_PreloadUrl._list.json.SingleColor)[\"RECORDS\"]);\r\n            this._setPitchByName(this._data[0][this._property.name]);\r\n        }\r\n        static _setPitchByName(name) {\r\n            for (let index = 0; index < this._data.length; index++) {\r\n                if (name == this._data[index][this._property.name]) {\r\n                    this._data[index][this._property.pitch] = true;\r\n                    this._pitchName = name;\r\n                    this._pitchColor = this._data[index][this._property.color];\r\n                }\r\n                else {\r\n                    this._data[index][this._property.pitch] = false;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    _SingleColorPencils._property = {\r\n        number: 'number',\r\n        name: 'name',\r\n        color: 'color',\r\n        pitch: 'pitch',\r\n    };\r\n    _SingleColorPencils._pitchName = '';\r\n    _SingleColorPencils._pitchColor = '';\r\n    _SingleColorPencils._data = [];\r\n    _Game._SingleColorPencils = _SingleColorPencils;\r\n    class _ColoursPencils extends _SingleColorPencils {\r\n        static _init() {\r\n            this._data = Tools.objArray_Copy(Laya.loader.getRes(_PreloadUrl._list.json.Colours)[\"RECORDS\"]);\r\n            this._setPitchByName(this._data[0][this._property.name]);\r\n        }\r\n    }\r\n    _Game._ColoursPencils = _ColoursPencils;\r\n    ;\r\n    class _StarsPencils extends _SingleColorPencils {\r\n        static _init() {\r\n            this._data = Tools.objArray_Copy(Laya.loader.getRes(_PreloadUrl._list.json.Colours)[\"RECORDS\"]);\r\n            this._setPitchByName(this._data[0][this._property.name]);\r\n        }\r\n    }\r\n    _Game._StarsPencils = _StarsPencils;\r\n    ;\r\n    function _init() {\r\n        _SingleColorPencils._init();\r\n        _StarsPencils._init();\r\n        _ColoursPencils._init();\r\n        _Game._stepOrder = ['Face', 'Petal1', 'Petal2', 'Petal3', 'Petal4', 'Stalk', 'Leaf1', 'Leaf2'];\r\n        _Game._passLenghtArr = [150, 150, 150, 150, 150, 150, 150, 150];\r\n    }\r\n    _Game._init = _init;\r\n    class _PencilsListItem extends Admin._Object {\r\n        lwgBtnClick() {\r\n            Click._on(Click._Type.largen, this.self, this, null, null, () => {\r\n                _SingleColorPencils._setPitchByName(this.self['_dataSource'][_SingleColorPencils._property.name]);\r\n                _Game._PencilsList.refresh();\r\n            });\r\n        }\r\n    }\r\n    _Game._PencilsListItem = _PencilsListItem;\r\n})(_Game || (_Game = {}));\r\nexport default class GameScene extends Admin._Scene {\r\n    constructor() {\r\n        super(...arguments);\r\n        this._drawingLenth = {\r\n            switch: true,\r\n            get value() {\r\n                return this['len'] ? this['len'] : 0;\r\n            },\r\n            set value(v) {\r\n                if (this.switch) {\r\n                    this['len'] = v;\r\n                    if (this['len'] >= _Game._passLenghtArr[_Game._stepIndex]) {\r\n                        EventAdmin._notify(_Game._Event.showStepBtn);\r\n                        this['len'] = 0;\r\n                    }\r\n                }\r\n            },\r\n        };\r\n    }\r\n    lwgOnAwake() {\r\n        _Game._stepIndex = 0;\r\n        _Game._drawSwitch = false;\r\n        _Game._stepIndex = 0;\r\n        _Game._PencilsList = this.ListVar('PencilsList');\r\n        _Game._PencilsList.array = _Game._SingleColorPencils._data;\r\n        _Game._PencilsList.selectEnable = true;\r\n        _Game._PencilsList.vScrollBarSkin = \"\";\r\n        _Game._PencilsList.selectHandler = new Laya.Handler(this, (index) => { });\r\n        _Game._PencilsList.renderHandler = new Laya.Handler(this, (cell, index) => {\r\n            let _dataSource = cell.dataSource;\r\n            let Pic = cell.getChildByName('Pic');\r\n            Pic.skin = 'Game/UI/GameScene/SinglePencils/' + _dataSource['name'] + '.png';\r\n            if (_dataSource[_Game._SingleColorPencils._property.pitch]) {\r\n                Pic.scale(1.1, 1.1);\r\n            }\r\n            else {\r\n                Pic.scale(1, 1);\r\n            }\r\n        });\r\n        if (_Game._PencilsList.cells.length !== 0) {\r\n            for (let index = 0; index < _Game._PencilsList.cells.length; index++) {\r\n                const element = _Game._PencilsList.cells[index];\r\n                if (!element.getComponent(_Game._PencilsListItem)) {\r\n                    element.addComponent(_Game._PencilsListItem);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    lwgOnEnable() {\r\n    }\r\n    lwgEventRegister() {\r\n        EventAdmin._register(_Game._Event.start, this, () => {\r\n            _Game._drawSwitch = true;\r\n            for (let index = 0; index < _Game._stepOrder.length; index++) {\r\n                if (_Game._stepIndex >= index) {\r\n                    this.ImgVar(_Game._stepOrder[index]).visible = true;\r\n                }\r\n                else {\r\n                    this.ImgVar(_Game._stepOrder[index]).visible = false;\r\n                }\r\n            }\r\n        });\r\n        EventAdmin._register(_Game._Event.showStepBtn, this, () => {\r\n            if (_Game._stepIndex == 0) {\r\n                this.ImgVar('BtnNextStep').visible = true;\r\n                Animation2D.fadeOut(this.ImgVar('BtnNextStep'), 0, 1, 300);\r\n            }\r\n            else {\r\n                if (!this.ImgVar('BtnNextStep').visible) {\r\n                    this.ImgVar('BtnNextStep').visible = true;\r\n                    Animation2D.fadeOut(this.ImgVar('BtnNextStep'), 0, 1, 300);\r\n                }\r\n                if (!this.ImgVar('BtnLastStep').visible) {\r\n                    this.ImgVar('BtnLastStep').visible = true;\r\n                    Animation2D.fadeOut(this.ImgVar('BtnLastStep'), 0, 1, 300);\r\n                }\r\n            }\r\n            this._drawingLenth.switch = false;\r\n        });\r\n        EventAdmin._register(_Game._Event.lastStep, this, () => {\r\n            if (_Game._stepIndex - 1 >= 0) {\r\n                let Img0 = this.ImgVar(_Game._stepOrder[_Game._stepIndex - 1]);\r\n                let parent0 = Img0.parent;\r\n                Animation2D.fadeOut(Img0.getChildByName('Pic'), 0, 1, 300, 0, () => {\r\n                    if (parent0 != this.ImgVar('DrawRoot')) {\r\n                        parent0.zOrder = (_Game._stepIndex + 1) * 10;\r\n                    }\r\n                    Img0.zOrder = (_Game._stepIndex + 1) * 10;\r\n                    let Img = this.ImgVar(_Game._stepOrder[_Game._stepIndex]);\r\n                    let parent = Img.parent;\r\n                    Animation2D.fadeOut(Img.getChildByName('Pic'), 1, 0, 300, 0, () => {\r\n                        if (parent != this.ImgVar('DrawRoot')) {\r\n                            parent.zOrder = -1;\r\n                        }\r\n                        Img.zOrder = -1;\r\n                        _Game._stepIndex--;\r\n                        if (_Game._stepIndex < _Game._stepMaskIndex) {\r\n                            this.ImgVar('BtnNextStep').visible = true;\r\n                        }\r\n                        if (_Game._stepIndex == 0) {\r\n                            this.ImgVar('BtnLastStep').visible = false;\r\n                        }\r\n                        this['BtnLastStepClose'] = false;\r\n                    });\r\n                });\r\n            }\r\n        });\r\n        EventAdmin._register(_Game._Event.nextStep, this, () => {\r\n            if (_Game._stepIndex >= _Game._stepOrder.length - 1) {\r\n                EventAdmin._notify(_Game._Event.compelet);\r\n                Animation2D.fadeOut(this.ImgVar(_Game._stepOrder[_Game._stepIndex]).getChildByName('Pic'), 1, 0, 300, 0);\r\n            }\r\n            else {\r\n                let Img = this.ImgVar(_Game._stepOrder[_Game._stepIndex]);\r\n                let parent = Img.parent;\r\n                if (parent != this.ImgVar('DrawRoot')) {\r\n                    parent.zOrder = -1;\r\n                }\r\n                Img.zOrder = -1;\r\n                Animation2D.fadeOut(Img.getChildByName('Pic'), 1, 0, 300, 0, () => {\r\n                    let Img0 = this.ImgVar(_Game._stepOrder[_Game._stepIndex + 1]);\r\n                    Img0.visible = true;\r\n                    Animation2D.fadeOut(Img0.getChildByName('Pic'), 0, 1, 300, 0, () => {\r\n                        let parent0 = Img0.parent;\r\n                        _Game._stepIndex++;\r\n                        if (_Game._stepIndex == _Game._stepMaskIndex + 1) {\r\n                            _Game._stepMaskIndex++;\r\n                            this.ImgVar('BtnNextStep').visible = false;\r\n                            this._drawingLenth.switch = true;\r\n                        }\r\n                        if (parent0 != this.ImgVar('DrawRoot')) {\r\n                            parent0.zOrder = _Game._stepIndex * 10;\r\n                        }\r\n                        console.log(_Game._stepIndex, _Game._stepMaskIndex);\r\n                        Img0.zOrder = _Game._stepIndex * 10;\r\n                        this['BtnNextStepClose'] = false;\r\n                    });\r\n                });\r\n            }\r\n        });\r\n        EventAdmin._register(_Game._Event.compelet, this, () => {\r\n            _Game._drawSwitch = false;\r\n            this.ImgVar('BtnNextStep').visible = false;\r\n            this.ImgVar('BtnLastStep').visible = false;\r\n            this.ImgVar('PlayAni').visible = true;\r\n            this.ImgVar('PlayAni').zOrder = 10;\r\n            this.ImgVar('BtnBack').visible = true;\r\n        });\r\n    }\r\n    lwgOnStart() {\r\n        EventAdmin._notify(_Game._Event.start);\r\n    }\r\n    lwgBtnClick() {\r\n        Click._on(Click._Type.largen, this.btnVar('BtnBack'), this, null, null, () => {\r\n            Admin._openScene(Admin._SceneName.UIStart, this.calssName);\r\n        });\r\n        for (let index = 0; index < _Game._stepOrder.length; index++) {\r\n            let DrawRoot = this.ImgVar(_Game._stepOrder[index]);\r\n            let Board = DrawRoot.addChild((new Laya.Sprite()).pos(0, 0));\r\n            Board.cacheAs = \"bitmap\";\r\n            Board.name = 'Board';\r\n            Board.width = DrawRoot.width;\r\n            Board.height = DrawRoot.height;\r\n            Click._on(Click._Type.noEffect, DrawRoot.getChildByName('Pic'), this, (e) => {\r\n                let Sp;\r\n                let Board = DrawRoot.getChildByName('Board');\r\n                this['frontPos'] = Board.globalToLocal(new Laya.Point(e.stageX, e.stageY));\r\n                if (_Game._SingleColorPencils._pitchName == 'eraser') {\r\n                    Sp = this['EraserSp'] = new Laya.Sprite();\r\n                    this['EraserSp'].blendMode = \"destination-out\";\r\n                }\r\n                else {\r\n                    Sp = this['DrawSp'] = new Laya.Sprite();\r\n                    this['DrawSp'].blendMode = \"none\";\r\n                }\r\n                Board.addChild(Sp)['pos'](0, 0);\r\n                Sp.graphics.drawCircle(this['frontPos'].x, this['frontPos'].y, 15, _Game._SingleColorPencils._pitchColor);\r\n            }, (e) => {\r\n                let Board = DrawRoot.getChildByName('Board');\r\n                let endPos = Board.globalToLocal(new Laya.Point(e.stageX, e.stageY));\r\n                if (this['frontPos'] && index == _Game._stepIndex && _Game._drawSwitch) {\r\n                    if (_Game._SingleColorPencils._pitchName == 'eraser') {\r\n                        if (this['EraserSp']) {\r\n                            let radius = 25;\r\n                            this['EraserSp'].graphics.drawLine(this['frontPos'].x, this['frontPos'].y, endPos.x, endPos.y, '#000000', radius * 2);\r\n                            this['EraserSp'].graphics.drawCircle(endPos.x, endPos.y, radius, '#000000');\r\n                        }\r\n                    }\r\n                    else {\r\n                        if (this['DrawSp']) {\r\n                            let radius = 15;\r\n                            this['DrawSp'].graphics.drawLine(this['frontPos'].x, this['frontPos'].y, endPos.x, endPos.y, _Game._SingleColorPencils._pitchColor, radius * 2);\r\n                            this['DrawSp'].graphics.drawCircle(endPos.x, endPos.y, radius, _Game._SingleColorPencils._pitchColor);\r\n                            this._drawingLenth.value += this['frontPos'].distance(endPos.x, endPos.y);\r\n                        }\r\n                    }\r\n                    this['frontPos'] = new Laya.Point(endPos.x, endPos.y);\r\n                }\r\n            }, (e) => {\r\n                this['frontPos'] = null;\r\n                let Board = DrawRoot.getChildByName('Board');\r\n                if (Board && Board.numChildren > 3) {\r\n                    let NewBoard = DrawRoot.addChild((new Laya.Sprite()).pos(0, 0));\r\n                    NewBoard.cacheAs = \"bitmap\";\r\n                    NewBoard.name = 'Board';\r\n                    NewBoard.width = DrawRoot.width;\r\n                    NewBoard.height = DrawRoot.height;\r\n                    NewBoard.texture = Board.drawToTexture(Board.width, Board.height, Board.x, Board.y);\r\n                    Board.destroy();\r\n                }\r\n            });\r\n        }\r\n        Click._on(Click._Type.largen, this.btnVar('PlayAni'), this, null, null, () => {\r\n            this.AniVar(_Game._Animation.action1).play(null, true);\r\n        });\r\n        Click._on(Click._Type.largen, this.btnVar('BtnLastStep'), this, null, null, () => {\r\n            if (this['BtnLastStepClose']) {\r\n                return;\r\n            }\r\n            else {\r\n                this['BtnLastStepClose'] = true;\r\n            }\r\n            this._drawingLenth.switch = false;\r\n            EventAdmin._notify(_Game._Event.lastStep);\r\n        });\r\n        Click._on(Click._Type.largen, this.btnVar('BtnNextStep'), this, null, null, () => {\r\n            if (this['BtnNextStepClose']) {\r\n                return;\r\n            }\r\n            else {\r\n                this['BtnNextStepClose'] = true;\r\n            }\r\n            if (!this.ImgVar('BtnLastStep').visible) {\r\n                this.ImgVar('BtnLastStep').visible = true;\r\n                Animation2D.fadeOut(this.ImgVar('BtnLastStep'), 0, 1, 300, null, null, true);\r\n            }\r\n            EventAdmin._notify(_Game._Event.nextStep);\r\n        });\r\n    }\r\n}\r\n",
  "references": [
    "D:/Game/project/Drawing/Project_2.5.0/Drawing_2.5.0/src/script/Frame/Lwg.ts",
    "D:/Game/project/Drawing/Project_2.5.0/Drawing_2.5.0/src/script/Frame/_PreLoad.ts"
  ]
}
