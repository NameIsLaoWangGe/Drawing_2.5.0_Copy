{
  "code": "import ADManager from \"../TJ/Admanager\";\r\nimport { Admin, Click, _Gold, Tools, Dialogue, _SceneName } from \"./Lwg\";\r\nimport { _Game } from \"./_Game\";\r\nimport { _PreloadUrl } from \"./_PreLoad\";\r\nexport var _SelectLevel;\r\n(function (_SelectLevel) {\r\n    class _data {\r\n        static _getClassifyArr(classify) {\r\n            let _arr = [];\r\n            for (const key in this._arr) {\r\n                if (Object.prototype.hasOwnProperty.call(this._arr, key)) {\r\n                    const element = this._arr[key];\r\n                    if (element[this._property.classify] == classify) {\r\n                        _arr.push(element);\r\n                    }\r\n                }\r\n            }\r\n            return _arr;\r\n        }\r\n        ;\r\n        static get _arr() {\r\n            if (!this['_SelectLevel_Data']) {\r\n                this['_SelectLevel_Data'] = Tools.jsonCompare(_PreloadUrl._list.json.SelectLevel.url, '_SelectLevel_Data', _data._property.name);\r\n            }\r\n            return this['_SelectLevel_Data'];\r\n        }\r\n        ;\r\n        static set _arr(array) {\r\n            this['_SelectLevel_Data'] = array;\r\n        }\r\n        ;\r\n        static getUnlockByName(name) {\r\n            let bool;\r\n            for (const key in this._arr) {\r\n                if (Object.prototype.hasOwnProperty.call(this._arr, key)) {\r\n                    const element = this._arr[key];\r\n                    if (element[this._property.name] == name) {\r\n                        bool = element[this._property.unlock];\r\n                        break;\r\n                    }\r\n                }\r\n                return bool;\r\n            }\r\n        }\r\n        ;\r\n        static getProperty(name, pro) {\r\n            let value;\r\n            for (const key in this._arr) {\r\n                if (Object.prototype.hasOwnProperty.call(this._arr, key)) {\r\n                    const element = this._arr[key];\r\n                    if (element[this._property.name] == name) {\r\n                        value = element[pro];\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n            return value;\r\n        }\r\n        ;\r\n        static setProperty(name, pro, value) {\r\n            for (const key in this._arr) {\r\n                if (Object.prototype.hasOwnProperty.call(this._arr, key)) {\r\n                    const element = this._arr[key];\r\n                    if (element[this._property.name] == name) {\r\n                        element[pro] = value;\r\n                        _SelectLevel._MyList.refresh();\r\n                        Laya.LocalStorage.setJSON('_SelectLevel_Data', JSON.stringify(this._arr));\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n            return value;\r\n        }\r\n        ;\r\n    }\r\n    _data._property = {\r\n        name: 'name',\r\n        chName: 'chName',\r\n        classify: 'classify',\r\n        unlockWay: 'unlockWay',\r\n        condition: 'condition',\r\n        resCondition: 'resCondition',\r\n        unlock: 'unlock',\r\n    };\r\n    _data._classify = {\r\n        limit: 'limit',\r\n        animal: 'animal',\r\n        botany: 'botany',\r\n        other: 'other',\r\n    };\r\n    _data._pich = {\r\n        get classify() {\r\n            return Laya.LocalStorage.getItem('_SelectLevel_pichclassify') ? Laya.LocalStorage.getItem('_SelectLevel_pichclassify') : 'animal';\r\n        },\r\n        set classify(str) {\r\n            if (_SelectLevel._MyList) {\r\n                _SelectLevel._MyList.array = _data._getClassifyArr(str);\r\n                _SelectLevel._MyList.refresh();\r\n            }\r\n            Laya.LocalStorage.setItem('_SelectLevel_pichclassify', str.toString());\r\n        },\r\n        get customs() {\r\n            return Laya.LocalStorage.getItem('_SelectLevel_pichcustoms') ? Laya.LocalStorage.getItem('_SelectLevel_pichcustoms') : null;\r\n        },\r\n        set customs(str) {\r\n            _SelectLevel._MyList.array = _data._getClassifyArr(str);\r\n            _SelectLevel._MyList.refresh();\r\n            Laya.LocalStorage.setItem('_SelectLevel_pichcustoms', str.toString());\r\n        }\r\n    };\r\n    _data._unlockWay = {\r\n        free: 'free',\r\n        gold: 'gold',\r\n        ads: 'ads',\r\n    };\r\n    _SelectLevel._data = _data;\r\n    let _Event;\r\n    (function (_Event) {\r\n        _Event[\"event1\"] = \"_Example_Event1\";\r\n        _Event[\"event2\"] = \"_Example_Event2\";\r\n    })(_Event = _SelectLevel._Event || (_SelectLevel._Event = {}));\r\n    function _init() {\r\n        _data._pich.classify = _data._classify.animal;\r\n    }\r\n    _SelectLevel._init = _init;\r\n    class _SelectLevelItem extends Admin._Object {\r\n        lwgBtnClick() {\r\n            let BtnContent = this.Owner.getChildByName('Content').getChildByName('BtnContent');\r\n            Click._on(Click._Type.largen, BtnContent, this, null, null, () => {\r\n                if (!this.owner['_dataSource'][_data._property.unlock]) {\r\n                    switch (this.owner['_dataSource'][_data._property.unlockWay]) {\r\n                        case _data._unlockWay.ads:\r\n                            ADManager.ShowReward(() => {\r\n                                _data.setProperty(this.Owner['_dataSource'][_data._property.name], _data._property.unlock, true);\r\n                            });\r\n                            break;\r\n                        case _data._unlockWay.gold:\r\n                            let num = this.owner['_dataSource'][_data._property.resCondition];\r\n                            if (_Gold._num.value >= num) {\r\n                                _data.setProperty(this.Owner['_dataSource'][_data._property.name], _data._property.unlock, true);\r\n                                _Gold._num.value -= num;\r\n                            }\r\n                            else {\r\n                                Dialogue.createHint_Middle(Dialogue.HintContent[\"金币不够了！\"]);\r\n                            }\r\n                            break;\r\n                        default:\r\n                            break;\r\n                    }\r\n                }\r\n                else {\r\n                    _data._pich.customs = this.owner['_dataSource'][_data._property.name];\r\n                    let levelName = _SceneName.Game + '_' + _data._pich.customs;\r\n                    this.lwgOpenScene(levelName, true, () => {\r\n                        if (!Admin._sceneControl[levelName].getComponent(_Game.Game)) {\r\n                            Admin._sceneControl[levelName].addComponent(_Game.Game);\r\n                        }\r\n                    });\r\n                }\r\n                _SelectLevel._MyList.refresh();\r\n            });\r\n        }\r\n    }\r\n    _SelectLevel._SelectLevelItem = _SelectLevelItem;\r\n    class SelectLevelBase extends Admin._SceneBase {\r\n        moduleOnAwake() {\r\n            _SelectLevel._MyList = this.ListVar('MyList');\r\n            _SelectLevel._MyList.array = _data._getClassifyArr(_data._pich.classify);\r\n            _SelectLevel._MyList.selectEnable = true;\r\n            _SelectLevel._MyList.vScrollBarSkin = \"\";\r\n            _SelectLevel._MyList.selectHandler = new Laya.Handler(this, (index) => { });\r\n            _SelectLevel._MyList.renderHandler = new Laya.Handler(this, (cell, index) => {\r\n                let _dataSource = cell.dataSource;\r\n                let Content = cell.getChildByName('Content');\r\n                let BtnContent = Content.getChildByName('BtnContent');\r\n                let Name = BtnContent.getChildByName('Name');\r\n                Name.skin = `Game/UI/SelectLevel/Name/${_dataSource[_data._property.name]}.png`;\r\n                let Xianlu = Content.getChildByName('Xianlu');\r\n                let IconPen = Content.getChildByName('IconPen');\r\n                if (index % 3 == 0) {\r\n                    IconPen.skin = `Game/UI/SelectLevel/IconDress/bi.png`;\r\n                }\r\n                else if (index % 2 == 0) {\r\n                    IconPen.skin = `Game/UI/SelectLevel/IconDress/bz.png`;\r\n                }\r\n                else {\r\n                    IconPen.skin = `Game/UI/SelectLevel/IconDress/shu.png`;\r\n                }\r\n                if (index % 2 !== 0) {\r\n                    Content.pos(27, 8);\r\n                    Xianlu.pos(104, 189);\r\n                    Xianlu.skin = `Game/UI/SelectLevel/xianlu2.png`;\r\n                    IconPen.scaleX = 1;\r\n                    IconPen.pos(350, 180);\r\n                }\r\n                else {\r\n                    Content.pos(363, 10);\r\n                    Xianlu.pos(-140, 170);\r\n                    Xianlu.skin = `Game/UI/SelectLevel/xianlu1.png`;\r\n                    IconPen.scaleX = -1;\r\n                    IconPen.pos(-31, 195);\r\n                }\r\n                let IconAds = BtnContent.getChildByName('IconAds');\r\n                let IconLock = BtnContent.getChildByName('IconLock');\r\n                let GoldNum = BtnContent.getChildByName('GoldNum');\r\n                let GoldBoard = BtnContent.getChildByName('GoldBoard');\r\n                if (!_dataSource[_data._property.unlock]) {\r\n                    switch (_dataSource[_data._property.unlockWay]) {\r\n                        case _data._unlockWay.ads:\r\n                            GoldBoard.visible = GoldNum.visible = false;\r\n                            IconLock.visible = IconAds.visible = true;\r\n                            break;\r\n                        case _data._unlockWay.free:\r\n                            GoldBoard.visible = GoldNum.visible = false;\r\n                            IconLock.visible = IconAds.visible = false;\r\n                            break;\r\n                        case _data._unlockWay.gold:\r\n                            GoldNum.text = _dataSource[_data._property.condition];\r\n                            IconLock.visible = GoldBoard.visible = GoldNum.visible = true;\r\n                            IconAds.visible = false;\r\n                            break;\r\n                        default:\r\n                            break;\r\n                    }\r\n                }\r\n                else {\r\n                    IconAds.visible = false;\r\n                    IconLock.visible = false;\r\n                    GoldNum.visible = false;\r\n                    GoldBoard.visible = false;\r\n                }\r\n                if (index == _SelectLevel._MyList.array.length - 1) {\r\n                    IconPen.visible = Xianlu.visible = false;\r\n                }\r\n                else {\r\n                    IconPen.visible = Xianlu.visible = true;\r\n                }\r\n                cell.zOrder = index;\r\n            });\r\n        }\r\n    }\r\n    _SelectLevel.SelectLevelBase = SelectLevelBase;\r\n    class SelectLevel extends _SelectLevel.SelectLevelBase {\r\n        lwgOnAwake() {\r\n            for (let index = 0; index < this.ImgVar('CutBtn').numChildren; index++) {\r\n                const element = this.ImgVar('CutBtn').getChildAt(index);\r\n                if (element.name == _data._pich.classify) {\r\n                    element.y = 11;\r\n                }\r\n                else {\r\n                    element.y = 69;\r\n                }\r\n            }\r\n        }\r\n        lwgAdaptive() {\r\n            this.ImgVar('UiLand').y = Laya.stage.height - 74;\r\n        }\r\n        lwgBtnClick() {\r\n            if (_SelectLevel._MyList.cells.length !== 0) {\r\n                for (let index = 0; index < _SelectLevel._MyList.cells.length; index++) {\r\n                    const element = _SelectLevel._MyList.cells[index];\r\n                    if (!element.getComponent(_SelectLevelItem)) {\r\n                        element.addComponent(_SelectLevelItem);\r\n                    }\r\n                }\r\n            }\r\n            for (let index = 0; index < this.ImgVar('CutBtn').numChildren; index++) {\r\n                const element = this.ImgVar('CutBtn').getChildAt(index);\r\n                if (element.name == _data._pich.classify) {\r\n                    element.y = 11;\r\n                }\r\n                else {\r\n                    element.y = 69;\r\n                }\r\n                Click._on(Click._Type.largen, element, this, null, null, (e) => {\r\n                    for (let index = 0; index < this.ImgVar('CutBtn').numChildren; index++) {\r\n                        const Btn = this.ImgVar('CutBtn').getChildAt(index);\r\n                        if (Btn == e.currentTarget) {\r\n                            Btn.y = 11;\r\n                            _data._pich.classify = Btn.name;\r\n                        }\r\n                        else {\r\n                            Btn.y = 69;\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n        }\r\n    }\r\n    _SelectLevel.SelectLevel = SelectLevel;\r\n})(_SelectLevel || (_SelectLevel = {}));\r\nexport default _SelectLevel.SelectLevel;\r\n",
  "references": [
    "D:/Game/project/Drawing/Project_2.5.0/Drawing_2.5.0/src/script/TJ/Admanager.ts",
    "D:/Game/project/Drawing/Project_2.5.0/Drawing_2.5.0/src/script/Frame/Lwg.ts",
    "D:/Game/project/Drawing/Project_2.5.0/Drawing_2.5.0/src/script/Frame/_Game.ts",
    "D:/Game/project/Drawing/Project_2.5.0/Drawing_2.5.0/src/script/Frame/_PreLoad.ts"
  ]
}
